set $mod Mod4

bar {
  swaybar_command waybar
}

# Keyboard layout
input * {
  xkb_layout "no"
}

# Enable numlock
input type:keyboard xkb_numlock enabled

# Monitors
output HDMI-A-1 mode 1920x1080@60Hz pos 0 0
output DP-1 mode 1920x1080@144Hz pos 1920 0
output DP-2 mode 1920x1080@60Hz pos 3840 0

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec kitty

# kill focused window
bindsym $mod+Shift+q kill

# start rofi
bindsym $mod+a exec --no-startup-id wofi --show drun

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# split toggle
bindsym $mod+s split toggle

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+t layout toggle all

# toggle tiling / floating
bindsym $mod+v floating toggle

# change focus between tiling / floating windows
bindsym $mod+Shift+v focus mode_toggle

# focus the parent container
bindsym $mod+p focus parent

# PCManFM
bindsym $mod+e exec pcmanfm

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"

# Assign workspace to monitors
workspace $ws1 output DP-1
workspace $ws2 output DP-2
workspace $ws3 output HDMI-A-1
# Assign all other workspace to main monitor
workspace $ws4 output DP-1
workspace $ws5 output DP-1
workspace $ws6 output DP-1
workspace $ws7 output DP-1
workspace $ws8 output DP-1
workspace $ws9 output DP-1

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

#############################
# Autostart
#
exec_always --no-startup-id waypaper --restore &
exec_always --no-startup-id dunst &
exec_always --no-startup-id lxsession &
exec_always --no-startup-id udiskie -s &

# Clipboard
exec wl-paste -t text --watch clipman store --no-persist

# swayr
exec env RUST_BACKTRACE=1 RUST_LOG=swayr=debug swayrd > /tmp/swayrd.log 2>&1

# Titlebars
default_border pixel 2
default_floating_border normal

# Disable mouse focus
focus_follows_mouse no

# Volume control
bindsym XF86AudioRaiseVolume exec --no-startup-id pulsemixer --change-volume +5
bindsym XF86AudioLowerVolume exec --no-startup-id pulsemixer --change-volume -5
bindsym XF86AudioMute exec --no-startup-id pulsemixer --toggle-mute

# Media Player controls
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioStop exec playerctl stop
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Screenshot
bindsym --release Shift+Print exec (grim -g "$(slurp -d)" - | wl-copy)

# swayr Window switcher
bindsym $mod+Space       exec swayr switch-window
bindsym $mod+Delete      exec swayr quit-window
bindsym $mod+Tab         exec swayr switch-to-urgent-or-lru-window
bindsym $mod+n           exec swayr next-window all-workspaces
bindsym $mod+b           exec swayr prev-window all-workspaces
bindsym $mod+Shift+Space exec swayr switch-workspace-or-window

# Force flaoting windows
for_window [class="Steam"] floating enable
for_window [class="Lutris"] floating enable
for_window [class="UnityHub"] floating enable
for_window [class="steam_app_489830"] floating enable
for_window [title="Microsoft Teams Notification"] floating enable
for_window [class="VirtualBox Manager"] floating enable, border normal

# Don't focus notifications or windows alike
no_focus [title="Microsoft Teams Notification"]

# Set inner/outer gaps
gaps inner 10
gaps outer 4

# Smart gaps (gaps used if only more than one container on the workspace)
#smart_gaps off

# Smart borders (draw borders around container only if it is not the only container on this workspace) 
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
#smart_borders on

# Press $mod+Shift+g to enter the gap mode. 
# Choose o or i for modifying outer/inner gaps.
# Press one of + / - (in-/decrement for current workspace) 
# or 0 (remove gaps for current workspace). If you also press Shift 
# with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# Color config
# class 	border 		backgr. 	text 	indicator 	child_border
client.focused 	#000000 	#333333 	#ffffff #ff00ff 	#ff00aa

include /etc/sway/config.d/*

######
# SwayFX ricing
######
blur enable
corner_radius 10
shadows enable

